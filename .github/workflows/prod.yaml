name: production

on:
  push:
    tags:
      - 'v*.*.*'
      - '!*-beta'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_VERSION: ${{ github.ref_name }}
  IMAGE_TAG: latest

jobs:
  publish:
    strategy:
      matrix:
        node-version: [latest]
        runs-on: [ubuntu-latest]
  
    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build Dist
        run: npm run p:build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create Release
        if: ${{ success() }}
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.IMAGE_VERSION }}
          release_name: Release ${{ env.IMAGE_VERSION }}
          body: |
            New package created:
            ${{ github.event.client_payload.package_name }}
          draft: false
          prerelease: false